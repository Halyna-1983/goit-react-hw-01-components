{"version":3,"sources":["components/Profile.js","components/Statistics.js","components/FriendListItem.js","components/FriendList.js","App.js","index.js"],"names":["Profile","avatar","name","tag","location","followers","views","likes","className","src","alt","Statistics","title","stats","map","item","id","label","percentage","defaultProps","FriendsListItem","friends","isOnline","width","FriendList","friend","App","style","backgroundColor","color","user","statisticalData","friendslist","ReactDOM","render","document","getElementById"],"mappings":"8zCAyDiBA,EAxCD,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,IAAKC,EAArB,EAAqBA,SAAUC,EAA/B,EAA+BA,UAAWC,EAA1C,EAA0CA,MAAOC,EAAjD,EAAiDA,MAAjD,OACR,sBAAKC,UAAU,UAAf,UACA,sBAAKA,UAAU,cAAf,UACE,qBACEC,IAAKR,EACLS,IAAI,gHACJF,UAAU,WAEZ,mBAAGA,UAAU,OAAb,SAAqBN,IACrB,oBAAGM,UAAU,MAAb,cAAqBL,KACrB,mBAAGK,UAAU,WAAb,SAAyBJ,OAG3B,qBAAII,UAAU,QAAd,UACE,+BACE,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BH,OAE9B,+BACE,sBAAMG,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BF,OAE9B,+BACE,sBAAME,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,c,OCvBlCI,EAAa,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAC1B,OAAO,0BAASL,UAAY,aAArB,UAEJI,GAAS,oBAAIJ,UAAU,QAAd,SAAuBI,IAEjC,6BACGC,EAAMC,KAAI,SAAAC,GACT,IAAMC,EAAyBD,EAAzBC,GAAIC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,WACjB,OAAO,qBAAIV,UAAU,OAAd,UACP,sBAAMA,UAAU,QAAhB,SAAyBS,IACzB,uBAAMT,UAAU,aAAhB,UAA8BU,EAA9B,SAFiCF,YASzCL,EAAWQ,aAAe,CACxBP,MAAO,eAeMD,Q,OCpCAS,EAXS,SAAAC,GACpB,IAAMpB,EAA0BoB,EAA1BpB,OAAQC,EAAkBmB,EAAlBnB,KAAMoB,EAAYD,EAAZC,SACpB,OACA,qCACK,sBAAMd,UAAU,SAAhB,SAA0Bc,IAC3B,qBAAKd,UAAU,SAASC,IAAKR,EAAQS,IAAI,GAAGa,MAAM,OAClD,mBAAGf,UAAU,OAAb,SAAqBN,QCqCdsB,EAtBI,SAAC,GAAD,IAAEH,EAAF,EAAEA,QAAF,OAEnB,oBAAIb,UAAU,cAAd,SAECa,EAAQP,KAAI,SAAAW,GAAM,OACf,oBAAIjB,UAAU,OAAd,SACA,cAAC,EAAD,CACAc,SAAYG,EAAOH,SACnBrB,OAAUwB,EAAOxB,OACjBC,KAAQuB,EAAOvB,QAJWuB,EAAOT,UCQtBU,MA7Bf,WACE,OACE,sBAAKC,MAAO,CACVC,gBAAiB,YACjBC,MAAO,UAFT,UAIE,8FACD,cAAC,EAAD,CACA3B,KAAM4B,EAAK5B,KACXC,IAAK2B,EAAK3B,IACVC,SAAU0B,EAAK1B,SACfH,OAAQ6B,EAAK7B,OACbY,MAAOiB,EAAKjB,QAEZ,iGAEA,cAAC,EAAD,CACAD,MAAM,eACNC,MAAOkB,IAGP,iGAEA,cAAC,EAAD,CACAV,QAASW,IAtBV,QCLJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.353057f0.chunk.js","sourcesContent":["// Профиль социальной сети\r\n// Необходимо создать компонент <Profile>, с помощью которого мы могли бы отображать информацию \r\n// о пользователе социальной сети. Данные о пользователе лежат в файле user.json.\r\n\r\n// Описание компонента\r\n// Компонент должен принимать несколько пропсов с информацией о пользователе:\r\n\r\n// name — имя пользователя\r\n// tag — тег в социальной сети без @\r\n// location — город и страна\r\n// avatar — url на изображение\r\n// stats — объект с информацией об активности\r\n\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Profile = ({avatar, name, tag, location, followers, views, likes}) => (\r\n        <div className=\"profile\">\r\n        <div className=\"description\">\r\n          <img\r\n            src={avatar}\r\n            alt=\"Аватар пользователя\"\r\n            className=\"avatar\"\r\n          />\r\n          <p className=\"name\">{name}</p>\r\n          <p className=\"tag\">@{tag}</p>\r\n          <p className=\"location\">{location}</p>\r\n        </div>\r\n      \r\n        <ul className=\"stats\">\r\n          <li>\r\n            <span className=\"label\">Followers</span>\r\n            <span className=\"quantity\">{followers}</span>\r\n          </li>\r\n          <li>\r\n            <span className=\"label\">Views</span>\r\n            <span className=\"quantity\">{views}</span>\r\n          </li>\r\n          <li>\r\n            <span className=\"label\">Likes</span>\r\n            <span className=\"quantity\">{likes}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n  );\r\n\r\n  Profile.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    followers: PropTypes.number,\r\n    views: PropTypes.number,\r\n    likes: PropTypes.number,\r\n};\r\n\r\n  export default Profile;","// Секция статистики\r\n// Создать компонет <Statistics>, который бы отображал статистику по переданным пропам.\r\n// К примеру загрузки в облако по типу файлов, посещение веб-страницы пользователями разных стран, финансовые траты и т. п.\r\n//  Данные о статистике лежат в файле statistical-data.json.\r\n\r\n//  Описание компонента\r\n//  Компонент должен принимать два пропа title и stats, в которых указывается заголовок и объект статистики.\r\n \r\n//  title - не обязателен, и если он не передан, не должна рендериться разметка заголовка <h2>.\r\n//  stats - массив объектов содержащих информацию о элементе статистики. Может иметь произвольное кол-во элементов.\r\n//  Цвет фона элемента статистики в оформлении можно пропустить, либо создать функцию для генерации случайного цвета.\r\n\r\n\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import stats from '../data/statistical-data.json';\r\n\r\nconst Statistics = ({title, stats}) => {\r\n  return <section className = \"statistics\">\r\n\r\n    {title && <h2 className=\"title\">{title}</h2>}\r\n  \r\n    <ul>\r\n      {stats.map(item => {\r\n        const{id, label, percentage} = item\r\n        return <li className=\"item\" key={id} >\r\n        <span className=\"label\">{label}</span>\r\n        <span className=\"percentage\">{percentage}%</span>\r\n      </li>\r\n})}\r\n    </ul>\r\n  </section>\r\n};\r\n\r\nStatistics.defaultProps = {\r\n  title: 'Statistics:',\r\n};\r\n\r\n\r\nStatistics.propTypes = { \r\n  title: PropTypes.string, \r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\n// import style from '../components/';\r\n\r\nconst FriendsListItem = friends => {\r\n    const{avatar, name, isOnline} = friends\r\n    return (\r\n    <>\r\n         <span className=\"status\">{isOnline}</span>\r\n        <img className=\"avatar\" src={avatar} alt=\"\" width=\"48\" />\r\n        <p className=\"name\">{name}</p>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default FriendsListItem;","// Список друзей\r\n// Необходимо создать компонент <FriendList>, с помощью которого мы могли бы отображать информацию о друзьях пользователя. \r\n// Информация о друзьях хранится в файле friends.json.\r\n\r\n// Описание компонента FriendList\r\n// Компонент должен принимать один проп friends - массив объектов друзей.\r\n\r\n// Компонент должен создавать DOM следующей структуры.\r\n\r\n// <ul class=\"friend-list\">\r\n//   <!-- Произвольное кол-во FriendListItem, в зависимости от кол-ва объектов в массиве -->\r\n// </ul>\r\n// Описание компонента FriendListItem\r\n// Компонент должен принимать несколько пропов:\r\n\r\n// avatar - ссылка на аватар\r\n// name - имя друга\r\n// isOnline - буль сигнализирующий о состоянии друга, в сети или нет.\r\n// В зависимости от пропа isOnline, должен меняться цвет фона span.status. Это можно сделать через разный CSS-класс \r\n// или Styled Components.\r\n\r\nimport React from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport FriendsListItem from './FriendListItem';\r\n\r\nconst FriendList = ({friends}) => (\r\n\r\n<ul className=\"friend-list\">\r\n\r\n{friends.map(friend => (\r\n    <li className=\"item\" key={friend.id}>\r\n    <FriendsListItem \r\n    isOnline = {friend.isOnline}\r\n    avatar = {friend.avatar}\r\n    name = {friend.name}\r\n    />\r\n    </li>\r\n    ))}\r\n    </ul>\r\n)\r\n\r\n// FriendList.propTypes = {\r\n//     isOnline: PropTypes.string,\r\n//     avatar: PropTypes.string.isRequired,\r\n//     name: PropTypes.string.isRequired,\r\n// }\r\n\r\nexport default FriendList;","import user from './data/user.json';\nimport Profile from './components/Profile';\nimport statisticalData from './data/statistical-data.json';\nimport Statistics from './components/Statistics';\nimport friendslist from './data/friends.json';\nimport FriendList from './components/FriendList';\n//import FriendsListItem from './components/FriendListItem';\n\n\nfunction App() {\n  return (\n    <div style={{\n      backgroundColor: 'Highlight',\n      color: 'tomato'\n    }}>\n      <h1>Завдання 1 - Profile</h1>\n     <Profile \n     name={user.name} \n     tag={user.tag}\n     location={user.location}\n     avatar={user.avatar}\n     stats={user.stats}/>\n\n     <h1>Завдання 2 - Statistics</h1>\n\n     <Statistics \n     title=\"Upload stats\" \n     stats={statisticalData} />\n     {/* <Statistics stats={Statistics.percentage} />; */}\n\n     <h1>Завдання 3 - FriendList</h1>\n\n     <FriendList \n     friends={friendslist} />,\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}